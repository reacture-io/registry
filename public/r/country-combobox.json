{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "country-combobox",
  "type": "registry:component",
  "title": "Country Combobox",
  "description": "A country combobox component",
  "dependencies": ["react-country-flag", "@reacture-io/iso-locale"],
  "registryDependencies": ["https://ui.reacture.io/r/combobox"],
  "files": [
    {
      "path": "registry/components/country-combobox.tsx",
      "content": "import { type FC, useCallback, useMemo } from \"react\";\nimport Flag from \"react-country-flag\";\nimport { countries } from \"@reacture-io/iso-locale/countries\";\n\nimport type {\n  CmdkFilterHandler,\n  ComboboxProps,\n} from \"@/registry/components/combobox\";\nimport Combobox from \"@/registry/components/combobox\";\n\ntype CountryComboboxProps = Omit<ComboboxProps<false>, \"options\">;\n\nconst CountryCombobox: FC<CountryComboboxProps> = (props) => {\n  const options = useMemo(\n    () =>\n      Object.values(countries).map((country) => ({\n        label: (\n          <span className=\"flex items-center gap-2\">\n            <Flag countryCode={country.alpha2} /> {country.name}\n          </span>\n        ),\n        value: country.alpha2,\n        keywords: [\n          country.name.toLowerCase(),\n          country.alpha2.toLowerCase(),\n          country.alpha3.toLocaleLowerCase(),\n        ],\n      })),\n    []\n  );\n\n  const handleFilter: CmdkFilterHandler = useCallback(\n    (_, search, keywords) =>\n      keywords?.some((keyword) => keyword.includes(search.toLowerCase()))\n        ? 1\n        : 0,\n    []\n  );\n\n  return (\n    <Combobox\n      {...props}\n      options={options}\n      onFilter={handleFilter}\n      placeholder=\"Select a country\"\n    />\n  );\n};\n\nexport default CountryCombobox;\n",
      "type": "registry:component"
    }
  ],
  "categories": ["form"]
}
