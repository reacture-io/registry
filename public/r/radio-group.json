{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radio-group",
  "type": "registry:component",
  "title": "Radio Group",
  "description": "A group of radios",
  "dependencies": [
    "class-variance-authority",
    "@radix-ui/react-radio-group",
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/components/radio-group.tsx",
      "content": "import { ComponentPropsWithoutRef, ElementRef, forwardRef } from \"react\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { cva } from \"class-variance-authority\";\nimport { Circle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface RadioGroupItemOption {\n  label?: string;\n  value: string;\n  disabled?: boolean;\n}\n\nconst RadioGroupItem = forwardRef<\n  ElementRef<typeof RadioGroupPrimitive.Item>,\n  ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <RadioGroupPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"border-primary text-primary ring-offset-background focus-visible:ring-ring aspect-square h-4 w-4 rounded-full border focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n      <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n    </RadioGroupPrimitive.Indicator>\n  </RadioGroupPrimitive.Item>\n));\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\n\nconst radioGroupVariants = cva(\"\", {\n  variants: {\n    orientation: {\n      horizontal: \"flex gap-8\",\n      vertical: \"grid gap-3\",\n    },\n  },\n  defaultVariants: {\n    orientation: \"vertical\",\n  },\n});\n\nexport interface RadioGroupProps\n  extends ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root> {\n  options?: Array<RadioGroupItemOption>;\n}\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n  {\n    variants: {\n      disabled: {\n        true: \"opacity-50\",\n      },\n    },\n    defaultVariants: {\n      disabled: false,\n    },\n  }\n);\n\nconst RadioGroup = forwardRef<\n  ElementRef<typeof RadioGroupPrimitive.Root>,\n  RadioGroupProps\n>(({ className, options, ...props }, ref) => {\n  if (options) {\n    return (\n      <RadioGroupPrimitive.Root\n        className={cn(\n          radioGroupVariants({ orientation: props.orientation }),\n          className\n        )}\n        {...props}\n        ref={ref}\n      >\n        {options.map((option) => (\n          <div className=\"flex gap-2\" key={option.value}>\n            <RadioGroupItem\n              id={option.value}\n              key={option.value}\n              disabled={option.disabled}\n              value={option.value}\n              aria-label={option.label}\n            />\n            {option.label && (\n              <label\n                htmlFor={option.value}\n                aria-disabled={option.disabled}\n                className={labelVariants({ disabled: option.disabled })}\n              >\n                {option.label}\n              </label>\n            )}\n          </div>\n        ))}\n      </RadioGroupPrimitive.Root>\n    );\n  }\n\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-3\", className)}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\nexport { RadioGroup, RadioGroupItem };\n",
      "type": "registry:component"
    }
  ],
  "categories": ["form"]
}
