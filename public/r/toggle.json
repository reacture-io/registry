{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle",
  "type": "registry:component",
  "title": "Toggle",
  "description": "A toggle component",
  "dependencies": [],
  "registryDependencies": ["https://ui.reacture.io/r/use-composition"],
  "files": [
    {
      "path": "registry/components/toggle.tsx",
      "content": "import React, { createContext, type FC, useCallback, useContext } from \"react\";\n\nimport { useComposition } from \"@/hooks/use-composition\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ToggleContextType {\n  value: string;\n  setValue: (value: string) => void;\n}\n\nconst ToggleContext = createContext<ToggleContextType>({\n  value: \"\",\n  setValue: () => undefined,\n});\n\nexport interface ToggleTabProps {\n  children?: React.ReactNode;\n  value: string;\n}\nconst ToggleTab: FC<ToggleTabProps> = ({ children, value }) => {\n  const { value: currentValue, setValue } = useContext(ToggleContext);\n  const handleClick = useCallback(() => {\n    setValue(value);\n  }, [value, setValue]);\n  return (\n    <button\n      data-tab={value}\n      onClick={handleClick}\n      className={cn(\n        \"px-3 py-1 text-sm rounded text-muted-foreground hover:text-foreground\",\n        value === currentValue && \"bg-background text-foreground\"\n      )}\n    >\n      {children}\n    </button>\n  );\n};\nToggleTab.displayName = \"ToggleTab\";\n\nexport interface ToggleProps {\n  value: string;\n  setValue: (value: string) => void;\n  children: React.ReactNode;\n}\nconst Toggle: FC<ToggleProps> = ({ value, setValue, children }) => {\n  const [_, toggleTabs] = useComposition(children, ToggleTab.displayName);\n  return (\n    <ToggleContext.Provider value={{ value, setValue }}>\n      <div className={`flex bg-muted rounded-md p-1`}>{toggleTabs}</div>\n    </ToggleContext.Provider>\n  );\n};\n\ninterface ToggleComposition {\n  Tab: FC<ToggleTabProps>;\n}\n\nconst RootWithComposition: ToggleComposition & typeof Toggle = Object.assign(\n  Toggle,\n  {\n    Tab: ToggleTab,\n  }\n);\n\nexport { RootWithComposition as Toggle };\n",
      "type": "registry:component"
    }
  ],
  "categories": ["form"]
}
